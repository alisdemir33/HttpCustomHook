[{"C:\\AlisRepo\\HttpCustomHook\\src\\index.js":"1","C:\\AlisRepo\\HttpCustomHook\\src\\App.js":"2","C:\\AlisRepo\\HttpCustomHook\\src\\components\\Tasks\\Tasks.js":"3","C:\\AlisRepo\\HttpCustomHook\\src\\components\\NewTask\\NewTask.js":"4","C:\\AlisRepo\\HttpCustomHook\\src\\components\\Tasks\\TaskItem.js":"5","C:\\AlisRepo\\HttpCustomHook\\src\\components\\NewTask\\TaskForm.js":"6","C:\\AlisRepo\\HttpCustomHook\\src\\components\\UI\\Section.js":"7","C:\\AlisRepo\\HttpCustomHook\\src\\hooks\\httpHook.js":"8"},{"size":142,"mtime":1616595887000,"results":"9","hashOfConfig":"10"},{"size":2033,"mtime":1624136271695,"results":"11","hashOfConfig":"10"},{"size":704,"mtime":1616595887000,"results":"12","hashOfConfig":"10"},{"size":1730,"mtime":1624366792303,"results":"13","hashOfConfig":"10"},{"size":164,"mtime":1616595887000,"results":"14","hashOfConfig":"10"},{"size":588,"mtime":1616595887000,"results":"15","hashOfConfig":"10"},{"size":176,"mtime":1616595887000,"results":"16","hashOfConfig":"10"},{"size":2510,"mtime":1624134362840,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ocflm6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\AlisRepo\\HttpCustomHook\\src\\index.js",[],["37","38"],"C:\\AlisRepo\\HttpCustomHook\\src\\App.js",["39"],"import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/httpHook'\n\nfunction App() {\n/*   const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); */\n  const [tasks, setTasks] = useState([]);\n\n  const {loading,error,sendRequest,data} = useHttp(); \n\n  /* const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-asd-default-rtdb.europe-west1.firebasedatabase.app/tasks.json'\n      );\n;debugger\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      if(data === null)\n        throw new Error('Request failed!');\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      ;debugger\n    \n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n */\n  useEffect(() => {\n   // fetchTasks();\n   fetchTasksHandler();\n  }, []);\n\n  useEffect ( () =>{\n    if(!error && !loading && data ){\n      const loadedTasks = [];\n  \n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n  \n      setTasks(loadedTasks);\n    }\n  },[data,loading,error])\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  const fetchTasksHandler = () => {\n    ;debugger\n    sendRequest('https://react-http-asd-default-rtdb.europe-west1.firebasedatabase.app/tasks.json','GET')\n\n    ;debugger\n    \n  }\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={loading}\n        error={error}\n        onFetch={fetchTasksHandler}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\AlisRepo\\HttpCustomHook\\src\\components\\Tasks\\Tasks.js",[],"C:\\AlisRepo\\HttpCustomHook\\src\\components\\NewTask\\NewTask.js",["40","41","42","43","44"],"C:\\AlisRepo\\HttpCustomHook\\src\\components\\Tasks\\TaskItem.js",[],"C:\\AlisRepo\\HttpCustomHook\\src\\components\\NewTask\\TaskForm.js",[],"C:\\AlisRepo\\HttpCustomHook\\src\\components\\UI\\Section.js",[],"C:\\AlisRepo\\HttpCustomHook\\src\\hooks\\httpHook.js",["45","46","47"],"import React, { useState, useEffect, useReducer ,useCallback} from 'react';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    data: null\r\n}\r\n\r\nconst httpReducer = (state, action) => {\r\n    ;debugger\r\n    if (action.type === 'SEND') {\r\n        return {...state, loading: true, error: null }\r\n\r\n    } else if (action.type === 'RESPONSE') {\r\n       \r\n        return { ...state, loading: false, data: action.payload, error: null }\r\n    }\r\n    else if (action.type === 'ERROR') {\r\n        return {...state, loading: false, data: null, error: action.payload }\r\n    } else {\r\n        return initialState;\r\n    }\r\n}\r\n\r\nconst useHttp = () => {\r\n\r\n    const [state, dispatchHttpAction] = useReducer(httpReducer,initialState);\r\n\r\n    const  sendRequest =  useCallback( async  (url,requestType, requestBody ) =>  {\r\n        ;debugger\r\n        dispatchHttpAction({type: 'SEND', payload: null});\r\n        ;debugger\r\n        try {\r\n            const response = await fetch(\r\n                // 'https://react-http-asd-default-rtdb.europe-west1.firebasedatabase.app/tasks.json'\r\n                url,\r\n                {\r\n                    method: requestType,\r\n                    body: requestBody,\r\n                    headers: { 'content-type': 'application-json' }\r\n                }\r\n            );\r\n            ; debugger\r\n            if (!response.ok) {\r\n                //throw new Error('Request failed!');\r\n                dispatchHttpAction({  type: 'ERROR', payload: null  });\r\n            }\r\n\r\n            const data = await response.json();\r\n            if (data === null) {\r\n                dispatchHttpAction({  type: 'ERROR', payload: null  });\r\n                // throw new Error('Request failed!');\r\n            }\r\n\r\n            dispatchHttpAction({  type: 'RESPONSE', payload: data  })\r\n            /* \r\n                  const loadedTasks = [];\r\n            \r\n                  for (const taskKey in data) {\r\n                    loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n                  } */\r\n\r\n            // setTasks(loadedTasks);\r\n        } catch (err) {\r\n            ; debugger\r\n\r\n            // setError(err.message || 'Something went wrong!');\r\n            dispatchHttpAction({ type: 'ERROR', payload: err.message  });\r\n        }\r\n        // setIsLoading(false);\r\n\r\n    }, []);\r\n\r\n\r\n    return {\r\n        loading:state.loading,\r\n        error:state.error,\r\n        sendRequest:sendRequest,\r\n       data: state.data,      \r\n    }\r\n}\r\nexport default useHttp;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":48,"column":6,"nodeType":"54","endLine":48,"endColumn":8,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":10,"column":10,"nodeType":"58","messageId":"59","endLine":10,"endColumn":17},{"ruleId":"61","severity":2,"message":"62","line":50,"column":7,"nodeType":"58","messageId":"63","endLine":50,"endColumn":15},{"ruleId":"61","severity":2,"message":"64","line":52,"column":5,"nodeType":"58","messageId":"63","endLine":52,"endColumn":17},{"ruleId":"61","severity":2,"message":"65","line":57,"column":57,"nodeType":"58","messageId":"63","endLine":57,"endColumn":66},{"ruleId":"56","severity":1,"message":"66","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"67","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTasksHandler'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-undef","'setError' is not defined.","undef","'setIsLoading' is not defined.","'isLoading' is not defined.","'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [fetchTasksHandler]",{"range":"73","text":"74"},[1226,1228],"[fetchTasksHandler]"]